<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title> Andrew Creekmore's CS 361 Project </title>
    <link rel="stylesheet" href="styles.css" type="text/css">
    
</head>

<body>
    <div class="container">
      <h1 class="app-title">tasks</h1>
      <ul class="task-list js-task-list"></ul>
  
      <form class="js-form">
        <input autofocus type="text" aria-label="Enter a new task" placeholder="Remember to..." class="js-task-input">
      </form>
    </div>

    <script type="text/javascript" src="app.js">

      // TODO APP

      // array to hold task items
      let tasks = [];

      function renderTask(task) {
        // select the first element with a class of `js-task-list`
        const list = document.querySelector('.js-task-list');

        // use the ternary operator to check if `task.checked` is true
        // if so, assign 'done' to `isChecked`. otherwise, assign an empty string
        const isChecked = task.checked ? 'done': '';
        // Create an `li` element and assign it to `node`
        const node = document.createElement("li");
        // set the class attribute
        node.setAttribute('class', `task-item ${isChecked}`);
        // set the data-key attribute to the id of the task
        node.setAttribute('data-key', task.id);
        // Set the contents of the `li` element created above
        node.innerHTML = `
          <input id="${task.id}" type="checkbox"/>
          <label for="${task.id}" class="tick js-tick"></label>
          <span>${task.text}</span>
          <button class="delete-task js-delete-task">
          <svg><use href="#delete-icon"></use></svg>
          </button>
        `;

        // Append the element to the DOM as the last child of
        // the element referenced by the `list` variable
        list.append(node);
      }

      // creates new task using text entered into text input + adds it to 'tasks' array
      function addTask(text) {
          const task = {
              text,
              checked: false,
              // create unique yet arbitrary id value
              id: Date.now(),
          };

          tasks.push(task);
          renderTask(task);
      }


      // ADD TASK DOM manipulation
      // select form element
      const form = document.querySelector('.js-form');
      // add submit event listener
      form.addEventListener('submit', event =>{
        // no page auto-refresh on submit
        event.preventDefault();
        // select text input
        const input = document.querySelector('.js-task-input');

        // get input value
        const text = input.value.trim();
        if (text !== '') {
            addTask(text);
            input.value = '';
            input.focus();
        }
      });



    </script>
</body>



</html>